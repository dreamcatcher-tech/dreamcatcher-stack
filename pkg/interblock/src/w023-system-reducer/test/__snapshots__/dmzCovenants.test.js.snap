// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dmzCovenants basic 1`] = `
{
  "api": {
    "add": {
      "additionalProperties": false,
      "description": "Add a new chain at the optional path, with optional given installer.  If no path is given, a reasonable default will be chosen",
      "properties": {
        "installer": {
          "oneOf": [
            {
              "type": "string",
            },
            {
              "default": {},
              "type": "object",
            },
          ],
        },
        "path": {
          "type": "string",
        },
      },
      "required": [],
      "title": "ADD",
      "type": "object",
    },
    "cat": {
      "additionalProperties": false,
      "description": "Return the state as an object at the given path",
      "properties": {
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "path",
      ],
      "title": "CAT",
      "type": "object",
    },
    "cd": {
      "additionalProperties": false,
      "description": "Change directory to the given path",
      "properties": {
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "path",
      ],
      "title": "CD",
      "type": "object",
    },
    "covenant": {
      "additionalProperties": false,
      "description": "Return the state of a published covenant",
      "properties": {
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "path",
      ],
      "title": "COVENANT",
      "type": "object",
    },
    "dispatch": {
      "additionalProperties": false,
      "description": "Dispatch an action to a remote chain",
      "properties": {
        "action": {
          "type": "object",
        },
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "action",
        "path",
      ],
      "title": "DISPATCH",
      "type": "object",
    },
    "ln": {
      "description": "Link to target path.
        Linking is act of inserting one Object as the child of another
        which allows an Object to be the child of more than one parent.
        This operation is essential to application data structures
        as opposed to simple filesystem data structures, which are 
        usually a tree",
      "properties": {
        "linkName": {
          "description": "defaults to the target name.  Must not have any pathing",
          "type": "string",
        },
        "target": {
          "type": "string",
        },
      },
      "required": [
        "target",
      ],
      "title": "LN",
      "type": "object",
    },
    "login": {
      "additionalProperties": false,
      "description": "Authenticate with a remote app complex
  Loop the user through a signon process that links
  The current machine pubkey to their interblock user chain.
  When this occurs, the guest chain will transition to the
  user chain, and the prompt will change from "guest" to "user"
      ",
      "properties": {
        "chainId": {
          "type": "string",
        },
        "credentials": {
          "type": "object",
        },
      },
      "required": [
        "chainId",
        "credentials",
      ],
      "title": "LOGIN",
      "type": "object",
    },
    "ls": {
      "additionalProperties": false,
      "description": "List all children, and any actions available in the chain at the given path",
      "properties": {
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "path",
      ],
      "title": "LS",
      "type": "object",
    },
    "mount": {
      "additionalProperties": false,
      "description": "Attempt to mount the given chainId at the given mountPath.
      This will make an entry in mtab if there is not one already.",
      "properties": {
        "chainId": {
          "pattern": "Qm[1-9A-Za-z]{44}",
          "type": "string",
        },
        "name": {
          "type": "string",
        },
        "noSkip": {
          "description": "When fetching updates for the remote, ensure every pulse in the lineage is fetched, as opposed to lazily fetching only the latest known",
          "type": "boolean",
        },
      },
      "required": [
        "chainId",
        "name",
      ],
      "title": "MOUNT",
      "type": "object",
    },
    "multiaddr": {
      "description": "Add a new multiaddr to network memory",
      "properties": {
        "multiaddr": {
          "type": "string",
        },
      },
      "required": [
        "multiaddr",
      ],
      "title": "MULTIADDR",
      "type": "object",
    },
    "peer": {
      "description": "Add a new multiaddr to network memory",
      "properties": {
        "chainId": {
          "type": "string",
        },
        "peerId": {
          "type": "string",
        },
      },
      "required": [
        "peerId",
        "chainId",
      ],
      "title": "PEER",
      "type": "object",
    },
    "ping": {
      "additionalProperties": true,
      "description": "Ping a remote chain",
      "properties": {
        "message": {
          "type": "object",
        },
        "to": {
          "type": "string",
        },
      },
      "required": [],
      "title": "PING",
      "type": "object",
    },
    "publish": {
      "additionalProperties": false,
      "description": "Make a covenant ready for consumption",
      "properties": {
        "covenant": {
          "description": "The state of the pulished covenant chain",
          "type": "object",
        },
        "name": {
          "description": "A friendly hint for consumers",
          "type": "string",
        },
        "parentPath": {
          "default": ".",
          "description": "Path to the publication chain.  You must have permission to update this chain.  If the path does not exist but the parent does, a new default child will be created",
          "type": "string",
        },
      },
      "required": [
        "name",
        "covenant",
        "parentPath",
      ],
      "title": "PUBLISH",
      "type": "object",
    },
    "rm": {
      "additionalProperties": false,
      "description": "Attempt to remove the chain at the given path, and all its children",
      "properties": {
        "history": {
          "default": false,
          "description": "Remove the history too",
          "type": "boolean",
        },
        "path": {
          "default": ".",
          "type": "string",
        },
      },
      "required": [
        "path",
      ],
      "title": "RM",
      "type": "object",
    },
    "validators": {
      "description": "
      View, change the validator set of a chain or group of chains.
      Recursively change all validators of the chains children.
      Validators must accept the role before the handover is complete.
      Can be used to force a change if a chain has stalled.
      ",
      "title": "VALIDATORS",
      "type": "object",
    },
  },
  "installer": {
    "state": {
      "root": "/",
      "wd": "/",
    },
  },
  "name": "shell",
}
`;

exports[`dmzCovenants basic 2`] = `
{
  "api": {},
  "installer": {},
  "name": "unity",
}
`;
